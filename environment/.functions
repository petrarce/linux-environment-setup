#!/bin/bash
function replace() {
	set -x
	echo replace \"$1\" with \"$2\"
    	sed -E "s,$1,$2,g" -i `git grep --name-only  "$1"`
	set +x
}

function genFlameGraph() {
    set -x
    perfDataFilePath=${1}
    svgOutput=${2}
    perfDataFile=`basename ${perfDataFilePath}`
    tmpFile="/tmp/${perfDataFile}.out.perf-folded"
    cat ${perfDataFilePath} | c++filt | ~/apps/FlameGraph/stackcollapse-perf.pl > ${tmpFile} && 
        ~/apps/FlameGraph/flamegraph.pl --width 1900 --minwidth 2 ${tmpFile} > ${svgOutput}

    rm ${tmpFile} || true
    set +x
}

function runRemoteScript() {
    set -x
    
    host=${1}
    pathToScript=${2}
    shift
    shift
    ssh ${host} "sh -s " -- < ${pathToScript} $@

    set +x
}

function runVlcMp4HttpStream(){


	getopt -o p:s: -l -port:-src -- "$@"
	if [ "$?" !== "0" ]; then
		return 1
	fi 

	local ARGS="$(getopt -o p:s:v -l -port:-src: -- "$@")"
	eval set -- "${ARGS}"

	local httpPort=80
	local srcVideo=""
	local verbose=""
	while true; do
		case "${1}" in
			-s|-src) srcVideo="${2}"; shift 2;;
			-p|-port) httpPort="${2}"; shift 2;;
			-v) verbose="-vvv"; shift;;
			--) shift; break;;
			*) echo "Unexpected option $1"; return 1;;
		esac
	done

	cvlc ${verbose} \
		--sout '#transcode{vcodec=h264}:std{access=http{mime=video/mp4},mux=ts,dst=:'"${httpPort}"'}' \
		--loop \
		--sout-keep \
		"$(realpath "${srcVideo}")"

}

hg() {
    history | grep "$1"
}

setup-toolchain-environment() {
	local environmentSetupScript=${1}
	CURRENT_PATH="${PATH}"
	source ${environmentSetupScript}
	export PATH="${PATH}:${CURRENT_PATH}"
}

setup-template() {
	local targetDirectory="${1}"
	local templateGithubLink="${2}"
	mkdir "${targetDirectory}"
	# wget https://github.com/petrarce/cmake-project-template/archive/refs/heads/master.zip -O "${targetDirectory}/master.zip"
	wget "${templateGithubLink}" -O "${targetDirectory}/master.zip"
	unzip -d "${targetDirectory}" "${targetDirectory}/master.zip"
	rm "${targetDirectory}/master.zip"
}

setup-cmake-template() {
	setup-template ${1} https://github.com/petrarce/cmake-project-template/archive/refs/heads/master.zip
}